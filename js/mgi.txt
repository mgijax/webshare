// mgi.txt
//

// note: this file cannot be used as is on any page as it contains config variables.
// these variables must have their values inserted before use.  this occurs as part 
// of the concatenation and minification of the js files.  

<!-- select current tab -->
function selectMinihomeTab(){
    var winLoc = new String(window.location);
    var winLocArray = winLoc.split("/");  
    var selectedPage = YAHOO.util.Dom.get(winLocArray[winLocArray.length -1]);
    YAHOO.util.Dom.addClass(selectedPage, 'selected');
}

YAHOO.util.Event.onDOMReady(selectMinihomeTab);

<!-- function kicks off on page load -->
function loadPage() {  
  // if we have a title bar, add help-linked logo if requested
  var titleBarWrapper = document.getElementById("titleBarWrapper");
  if (titleBarWrapper != null) {
      var currentHTML = titleBarWrapper.innerHTML;
      var helpIcon = '<img class="titleBarHelpIcon" src="${WEBSHARE_URL}images/help_large_transp.gif">';
      var userdoc = titleBarWrapper.getAttribute("userdoc");
      if (userdoc != null) {

        var helpLink = '';

        userdocArray = userdoc.split("/");
        if (userdocArray[0] == 'http:') { //passed a full URL
          helpLink = "<a href='" + userdoc + "'>" + helpIcon + "</a>";
        }
        else {
          helpLink = "<a href='${USERDOCS_URL}" + userdoc + "'>" + helpIcon + "</a>";
        }

        titleBarWrapper.innerHTML = helpLink + currentHTML;
      }
  }
};

YAHOO.util.Event.onDOMReady(loadPage);


<!-- faq window to assist user; callable from anywhere using the templates -->
function openFaqWindow(faqFile)
{
    faqUrl = "${FAQ_URL}" + faqFile;
    window.open(faqUrl,'faqWindow','width=1000,height=600,resizable=yes,scrollbars=yes,alwaysRaised=yes');
};

<!-- initialize navigation menu -->
YAHOO.namespace("mgi.navbar");
YAHOO.mgi.navbar.menuinit = function() {
    var menu = new YAHOO.widget.MenuBar("navBarMenu", {
            constraintoviewport: false,
            autosubmenudisplay: true,
            showdelay: 100,
            hidedelay: 400,
            lazyload: true
        });
    menu.render();
    menu.cfg.setProperty("constraintoviewport", false);
};

YAHOO.util.Event.onDOMReady(YAHOO.mgi.navbar.menuinit);


function openNewWindow(url)
{
    window.open(url,'new','width=1000,height=600,resizable=yes,scrollbars=yes,menubar=yes,toolbar=yes,alwaysRaised=yes');
};

function openNewWindowNoMenu(url)
{
    window.open(url,'new','width=1000,height=600,resizable=yes,scrollbars=yes,alwaysRaised=yes');
};

function verifySearchToolParms() {
  var blankRE=/^\s*$/;
  var searchToolTextArea = document.getElementById("searchToolTextArea");

  if (searchToolTextArea.value == " Keywords, Symbols, or IDs" || blankRE.test(searchToolTextArea.value)) {
    alert("Please enter an ID or symbol or name into the text box.");
    return false;
  }

  return true
}

/* requests the page at the given 'url' from the server, passes along the
 * given arguments as 'args', and ignores the response
 */
function hitUrl (url, args) {
  try {
    var myRequest = new ajaxObject (url);
    myRequest.update (args);
  } catch (err) {
    // ignore errors, as this is not mission-critical code
  }
  return;
}

/*--------------------------------------------------------------------------*/

/* function ajaxObject() for asynchronous loading of URLs taken from:
 *	http://www.hunlock.com/blogs/The_Ultimate_Ajax_Object
 * callbackFunction is optional;  returns a javascript object
 */
function ajaxObject(url, callbackFunction) {
  var that=this;      
  this.updating = false;
  this.abort = function() {
    if (that.updating) {
      that.updating=false;
      that.AJAX.abort();
      that.AJAX=null;
    }
  }
  this.update = function(passData,postMethod) { 
    if (that.updating) { return false; }
    that.AJAX = null;                          
    if (window.XMLHttpRequest) {              
      that.AJAX=new XMLHttpRequest();              
    } else {                                  
      that.AJAX=new ActiveXObject("Microsoft.XMLHTTP");
    }                                             
    if (that.AJAX==null) {                             
      return false;                               
    } else {
      that.AJAX.onreadystatechange = function() {  
        if (that.AJAX.readyState==4) {             
          that.updating=false;                
          that.callback(that.AJAX.responseText,that.AJAX.status,that.AJAX.responseXML);        
          that.AJAX=null;                                         
        }                                                      
      }                                                        
      that.updating = new Date();                              
      if (/post/i.test(postMethod)) {
        var uri=urlCall+'?'+that.updating.getTime();
        that.AJAX.open("POST", uri, true);
        that.AJAX.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        that.AJAX.setRequestHeader("Content-Length", passData.length);
        that.AJAX.send(passData);
      } else {
        var uri=urlCall+'?'+passData+'&timestamp='+(that.updating.getTime()); 
        that.AJAX.open("GET", uri, true);                             
        that.AJAX.send(null);                                         
      }              
      return true;                                             
    }                                                                           
  }
  var urlCall = url;        
  this.callback = callbackFunction || function () { };
}

/*--------------------------------------------------------------------------*/

function changeVisibility(id) {

    var myID = document.getElementById(id);

    if (myID.style.display != "none"){
        myID.style.display = "none";
    } else {
        myID.style.display = "block";
    }
}

function changeInline(id) {

    var myID = document.getElementById(id);

    if (myID.style.display == "inline"){
        myID.style.display = "none";
    } else {
        myID.style.display = "inline";
    }
}

function formCap(){
    var c;
    if ( document.getElementById("${CAPTCHA_ELEMENT}") ){
        c = document.getElementById("${CAPTCHA_ELEMENT}");
        if ( isNaN(c.value) == true ) {
            c.value = 0;
        } else {
            c.value = parseInt(c.value) + 1;
        }
        
    }
    setTimeout("formCap()", 1000);
}
formCap();
